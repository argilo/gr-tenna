options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: gotenna_rx_hackrf
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: baud_rate
  id: variable
  parameters:
    comment: ''
    value: '24000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 420.0]
    rotation: 0
    state: enabled
- name: center_freq
  id: variable
  parameters:
    comment: ''
    value: '915000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 164.0]
    rotation: 0
    state: true
- name: chan_spacing
  id: variable
  parameters:
    comment: ''
    value: '500000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 228.0]
    rotation: 0
    state: enabled
- name: fsk_deviation_hz
  id: variable
  parameters:
    comment: ''
    value: '12500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 356.0]
    rotation: 0
    state: enabled
- name: lp_taps
  id: variable_low_pass_filter_taps
  parameters:
    beta: '6.76'
    comment: ''
    cutoff_freq: '75000'
    gain: '1.0'
    samp_rate: chan_spacing
    value: ''
    width: '50000'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 20.0]
    rotation: 0
    state: true
- name: offset
  id: variable
  parameters:
    comment: ''
    value: chan_spacing // 2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 292.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: chan_spacing * 2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 100.0]
    rotation: 0
    state: enabled
- name: analog_quadrature_demod_cf_0
  id: analog_quadrature_demod_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gain: chan_spacing/(2*math.pi*fsk_deviation_hz)
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 196.0]
    rotation: 180
    state: enabled
- name: blocks_keep_one_in_n_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: samp_rate // chan_spacing
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 184.0]
    rotation: 180
    state: enabled
- name: dc_blocker_xx_0
  id: dc_blocker_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: '1024'
    long_form: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: ff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 188.0]
    rotation: 180
    state: enabled
- name: digital_binary_slicer_fb_0
  id: digital_binary_slicer_fb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 304.0]
    rotation: 0
    state: enabled
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: digital.constellation_bpsk().base()
    damping: '1.5'
    loop_bw: '0.05'
    max_dev: 0.001 * float(chan_spacing) / baud_rate / 4
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '128'
    osps: '1'
    pfb_mf_taps: '[]'
    resamp_type: digital.IR_MMSE_8TAP
    sps: float(chan_spacing) / baud_rate / 4
    ted_gain: '1.0'
    ted_type: digital.TED_MENGALI_AND_DANDREA_GMSK
    type: ff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 292.0]
    rotation: 0
    state: enabled
- name: freq_xlating_fir_filter_xxx_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: offset
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: chan_spacing
    taps: lp_taps
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [640, 172.0]
    rotation: 180
    state: true
- name: gotenna_sink
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport gotenna_packet\n\
      \n\nclass blk(gr.sync_block):\n    \"\"\"Decode Gotenna Mesh packets\"\"\"\n\
      \n    def __init__(self):\n        gr.sync_block.__init__(\n            self,\n\
      \            name=\"Gotenna decoder\",\n            in_sig=[np.int8],\n    \
      \        out_sig=None\n        )\n        self.prefix = \"10\"*16 + \"0010110111010100\"\
      \n        self.bits = \"\"\n\n    def work(self, input_items, output_items):\n\
      \        self.bits += \"\".join([str(n) for n in input_items[0]])\n\n      \
      \  idx = self.bits[:-2048].find(self.prefix)\n        while idx >= 0:\n    \
      \        self.bits = self.bits[idx + len(self.prefix):]\n            length\
      \ = int(self.bits[0:8], 2)\n\n            packet = bytes(int(self.bits[i*8:i*8\
      \ + 8], 2) for i in range(length + 1))\n            try:\n                print()\n\
      \                print(\"Raw bytes: \" + packet.hex())\n\n                packet\
      \ = gotenna_packet.correct_packet(packet)\n                print(\"Corrected:\
      \ \" + packet.hex())\n                print()\n                gotenna_packet.ingest_packet(packet)\n\
      \            except Exception as err:\n                print(\"Error decoding\
      \ packet: \" + str(err))\n\n            self.bits = self.bits[(length + 1) *\
      \ 8:]\n            idx = self.bits[:-2048].find(self.prefix)\n\n        self.bits\
      \ = self.bits[-2048 - len(self.prefix) + 1:]\n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Gotenna decoder', 'blk', [], [('0', 'byte', 1)], [], 'Decode Gotenna
      Mesh packets', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 304.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '4'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: ''
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 324.0]
    rotation: 0
    state: enabled
- name: soapy_hackrf_source_0
  id: soapy_hackrf_source
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: '28000000'
    center_freq: center_freq - offset
    comment: ''
    dev_args: ''
    gain: '16'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
    vga: '16'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 172.0]
    rotation: 180
    state: true

connections:
- [analog_quadrature_demod_cf_0, '0', dc_blocker_xx_0, '0']
- [blocks_keep_one_in_n_0, '0', freq_xlating_fir_filter_xxx_0, '0']
- [dc_blocker_xx_0, '0', rational_resampler_xxx_0, '0']
- [digital_binary_slicer_fb_0, '0', gotenna_sink, '0']
- [digital_symbol_sync_xx_0, '0', digital_binary_slicer_fb_0, '0']
- [freq_xlating_fir_filter_xxx_0, '0', analog_quadrature_demod_cf_0, '0']
- [rational_resampler_xxx_0, '0', digital_symbol_sync_xx_0, '0']
- [soapy_hackrf_source_0, '0', blocks_keep_one_in_n_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.9.2
